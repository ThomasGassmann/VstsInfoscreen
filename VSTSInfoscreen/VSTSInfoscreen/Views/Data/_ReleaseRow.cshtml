@using VSTSInfoscreen.Models
@model ReleaseViewModel
@{
    var config = InfoscreenConfiguration.Instance;
    var picColSize = $"s{(config.CompactMode ? 2 : 4)}";
    var contentColSize = $"s{(config.CompactMode ? 10 : 8)}";
}
<div class="card infoCard" id="@string.Concat("release", Model.ReleaseId)">
    <div class="card-stacked">
        <div class="card-content row infoCardTop">
            <div class="col @picColSize">
                <img src="@Model.ReleasedByProfilePicture" class="user-image" />
            </div>
            <div class="col @contentColSize infoCardContent">
                <p><strong>Created: </strong>@Model.Created.GetReadableDate()</p>
                <p><strong>Branch: </strong>@(Model.Branch.Contains("refs/heads/") ? Model.Branch.Substring(Model.Branch.IndexOf("refs/heads/") + 11) : Model.Branch)</p>
                @if (!config.CompactMode)
                {
                    <strong>Reason: </strong>
                    <p>@Model.Reason</p>
                    <strong>Description: </strong>
                    <p>@(Model.Description == string.Empty ? "-" : Model.Description)</p>
                }
                @if (Model.Succeeded)
                {
                    <i class="material-icons successIndicator">done</i>
                }
                else
                {
                    <i class="material-icons successIndicator">cancel</i>
                }
                @foreach (var env in this.Model.Environments)
                {
                    <div class="environment" style="background-color: @env.GetColor();">
                        <p>@env.Name.TrimAfter(15)</p>
                    </div>
                }
            </div>
        </div>
        <div class="card-action">
            <span class="card-title"><strong>@Model.ReleaseId</strong>: @Model.ReleaseDefinitionName</span>
        </div>
    </div>

    @if (Model.IsInProgress)
    {
        <div class="progress loader">
            <div class="indeterminate"></div>
        </div>
    }
</div>